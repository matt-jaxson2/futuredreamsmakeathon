(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))n(a);new MutationObserver(a=>{for(const s of a)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&n(i)}).observe(document,{childList:!0,subtree:!0});function t(a){const s={};return a.integrity&&(s.integrity=a.integrity),a.referrerPolicy&&(s.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?s.credentials="include":a.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(a){if(a.ep)return;a.ep=!0;const s=t(a);fetch(a.href,s)}})();class h{async fetchData(e){try{return await(await fetch(`http://${window.location.hostname}:5174/${e}`)).json()}catch(t){console.error("Error:",t)}}}class u{constructor(){this.setElements(),this.setEvents()}setElements(){this.elements={body:document.querySelector("body"),modal:document.querySelector(".js-modal"),content:document.querySelector(".js-modal__content"),closeButton:document.querySelector(".js-modal__close")}}setEvents(){document.addEventListener("mousedown",e=>{this.elements.modal.contains(e.target)||this.closeModal()}),this.elements.closeButton.addEventListener("click",e=>{e.preventDefault(),this.closeModal()})}setContent(e){this.elements.content.innerHTML!==e&&(this.elements.content.innerHTML=e)}openModal(){this.elements.body.classList.add("modal-open"),this.elements.modal.setAttribute("aria-hidden",!1)}closeModal(){this.elements.body.classList.remove("modal-open"),this.elements.modal.setAttribute("aria-hidden",!0)}}const d=r=>r.replace(/[&<>'"]/g,e=>({"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"})[e]);class m{constructor(){this.customRenderEvent=new CustomEvent("grid:rendered")}init(){this.makeathonAPI=new h,this.modal=new u,this.setGrid(),this.setElements(),this.setEvents()}setElements(){this.elements={grid:document.querySelector(".js-image-grid")}}setEvents(){document.addEventListener("route:entry",e=>{this.setRoute(e.detail.route)}),this.elements.grid.addEventListener("click",e=>{const t=e.target;t.tagName==="A"&&(this.setContent(t),this.modal.openModal())})}setRoute(e){const t=e.replace("#",""),n=document.getElementById(`${t}-target`);n&&n.click()}setContent(e){const{dataset:{image:t,message:n,name:a}}=e,s=`
      <figure>
        <div class="modal__image-wrapper">
          <img 
            src="${t}"
            class="modal__image js-modal__image"
            alt=""
            onload="this.className = 'modal__image js-modal__image image-loaded'"
            onerror="this.className = 'modal__image js-modal__image hidden'">
          <div class="content-loader"></div>
        </div>
        <figcaption class="modal__text">
          <p id="modalDescription" class="modal__message js-modal__message">${d(n)}</p>
          <cite class="modal__cite">By <span class="js-modal__cite-name">${a}</span></cite>
        </figcaption>
      </figure>
    `;this.modal.setContent(s)}lazyImages(e){const t=new IntersectionObserver(n=>{n.forEach(a=>{if(a.isIntersecting){const s=a.target,{alt:i,src:o}=s.dataset;s.src=o,s.alt=i,t.unobserve(s)}})});e.forEach(n=>t.observe(n))}async setGrid(e){const t=e||await this.makeathonAPI.fetchData("data"),n=t.length<50?50:t.length;let a="";for(let s=0;s<n;s++){const i=t[s];if(!i)a+=`
          <div class="image-grid__item-wrapper"><div class="image-grid__item image-grid__item--placeholder" aria-hidden="true"></div></div>
        `;else{const{highlight:o,image_small:g,image_medium:p,message:f,name:c,id:_}=i,l=`entry${_}`;a+=`
          <div class="image-grid__item-wrapper">
            <a id="${l}-target" href="#${l}" class="image-grid__item${o?" image-grid__item--highlighted":""}" data-id="${l}" data-image="${p}" data-name="${c}" data-message="${d(f)}">
              <p class="sr-only">See a larger image and read the message from ${c}</p>
              <img class="image-grid__image js-lazy-image" data-src="${g}" data-alt="Photo of ${c}'s knitted flower" />
            </a>
          </div>
        `}}this.render(a)}renderEvent(){document.dispatchEvent(this.customRenderEvent)}render(e){const t=document.querySelector(".js-image-grid");t.classList.remove("image-grid--loading"),t.innerHTML=e,this.lazyImages(t.querySelectorAll(".js-lazy-image")),this.renderEvent()}}class y{constructor(){this.grid=new m,this.modal=new u,this.makeathonAPI=new h}init(){this.setElements(),this.setEvents()}setElements(){this.elements={modalContent:document.querySelector(".js-modal__content"),openButton:document.querySelector(".js-open-search-button")}}setEvents(){document.addEventListener("search:query",e=>{this.query=this.getQueryFromRoute(e.detail.route),this.openSearch(this.query),this.searchResults(this.query)}),this.elements.openButton.addEventListener("click",e=>{e.preventDefault(),this.openSearch()})}openSearch(){this.setContent(),this.modal.openModal()}async searchResults(e){this.isLoading();const t=await this.makeathonAPI.fetchData(`search?term=${this.query}`);t.length>0&&!e&&this.isResults(),t.length===0&&this.noResults(),(t.length>0||e)&&this.grid.setGrid(t),this.isLoaded()}getQueryFromRoute(e=window.location.hash){return e.split("/")[1]}isLoading(){document.querySelector(".js-main-content").classList.add("content-loading")}isLoaded(){document.querySelector(".js-main-content").classList.remove("content-loading")}isResults(){this.elements.container.classList.add("search--has-results")}noResults(){this.elements.container.classList.remove("search--has-results"),this.setMessage("no-results")}clearResults(){this.elements.container.classList.remove("search--has-results"),this.query="",window.location.hash="",this.resetMessage(),this.searchResults(!0)}setMessage(e){let t="";switch(e){case"no-results":t="Oops! Your search came up empty.";break;case"characters":t="Search with at least 3 characters!";break;default:t="Uh-oh, looks like our search got a little lost."}this.elements.searchMessage.classList.add("search__message--show"),this.elements.searchMessage.innerHTML=t}resetMessage(){this.elements.searchMessage.classList.remove("search__message--show"),this.elements.searchMessage.innerHTML=""}setContent(){const e=`
      <form class="search js-search">
        <label for="search-input" id="modalDescription">Search for an entry</label>
        <input id="search-input" class="search__input js-search__input" type="text" aria-describedby="search-message" value="${this.query}">
        <span id="search-message" class="search__message js-search__message" aria-live="assertive"></span>
        <div class="search__buttons">
          <button class="button button--style2 search__button js-search__button">Search</button>
          <button class="button button--style3 search__clear-button js-search__clear-button">Clear</button>
        </div>
      </form>
    `;this.modal.setContent(e),this.afterRender()}setInputValue(e){e.value=this.getQueryFromRoute()||""}afterRender(){this.elements.container=document.querySelector(".js-search"),this.elements.searchButton=document.querySelector(".js-search__button"),this.elements.searchClearButton=document.querySelector(".js-search__clear-button"),this.elements.searchInput=document.querySelector(".js-search__input"),this.elements.searchMessage=document.querySelector(".js-search__message"),this.setInputValue(this.elements.searchInput),this.elements.searchButton.addEventListener("click",e=>{e.preventDefault(),this.query=this.elements.searchInput.value.trim(),this.resetMessage(),this.query.length>=3?(this.searchResults(),window.location.hash=`search/${this.query}`):this.setMessage("characters")}),this.elements.searchClearButton.addEventListener("click",e=>{e.preventDefault(),this.elements.searchInput.value="",this.clearResults()})}}class v{constructor(e){this.routes=e,this.handleRouteChange=this.handleRouteChange.bind(this),window.addEventListener("hashchange",this.handleRouteChange),this.handleRouteChange()}handleRouteChange(){const e=window.location.hash.slice(1);let t=this.routes[e];if(!t){const a=Object.keys(this.routes).filter(s=>s.includes("*"));for(const s of a)if(new RegExp("^"+s.replace("*",".*")+"$").test(e)){t=this.routes[s];break}}const n=this.routes.default;t&&typeof t=="function"?t():n&&typeof n=="function"?n():console.error(`No route found for hash: ${e}`)}}const w=new m;w.init();const b=new y;b.init();new v({"":()=>{},"entry*":()=>{document.addEventListener("grid:rendered",()=>{const r=new CustomEvent("route:entry",{detail:{route:window.location.hash}});document.dispatchEvent(r)})},"search/*":()=>{const r=new CustomEvent("search:query",{detail:{route:window.location.hash}});document.dispatchEvent(r)}});
